package com.ocr.dao.model;

import java.util.ArrayList;
import java.util.List;

public class PdfLinedataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public PdfLinedataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPdfIdIsNull() {
            addCriterion("pdf_id is null");
            return (Criteria) this;
        }

        public Criteria andPdfIdIsNotNull() {
            addCriterion("pdf_id is not null");
            return (Criteria) this;
        }

        public Criteria andPdfIdEqualTo(Integer value) {
            addCriterion("pdf_id =", value, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdNotEqualTo(Integer value) {
            addCriterion("pdf_id <>", value, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdGreaterThan(Integer value) {
            addCriterion("pdf_id >", value, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("pdf_id >=", value, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdLessThan(Integer value) {
            addCriterion("pdf_id <", value, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdLessThanOrEqualTo(Integer value) {
            addCriterion("pdf_id <=", value, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdIn(List<Integer> values) {
            addCriterion("pdf_id in", values, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdNotIn(List<Integer> values) {
            addCriterion("pdf_id not in", values, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdBetween(Integer value1, Integer value2) {
            addCriterion("pdf_id between", value1, value2, "pdfId");
            return (Criteria) this;
        }

        public Criteria andPdfIdNotBetween(Integer value1, Integer value2) {
            addCriterion("pdf_id not between", value1, value2, "pdfId");
            return (Criteria) this;
        }

        public Criteria andYBeginIsNull() {
            addCriterion("y_begin is null");
            return (Criteria) this;
        }

        public Criteria andYBeginIsNotNull() {
            addCriterion("y_begin is not null");
            return (Criteria) this;
        }

        public Criteria andYBeginEqualTo(Float value) {
            addCriterion("y_begin =", value, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginNotEqualTo(Float value) {
            addCriterion("y_begin <>", value, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginGreaterThan(Float value) {
            addCriterion("y_begin >", value, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginGreaterThanOrEqualTo(Float value) {
            addCriterion("y_begin >=", value, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginLessThan(Float value) {
            addCriterion("y_begin <", value, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginLessThanOrEqualTo(Float value) {
            addCriterion("y_begin <=", value, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginIn(List<Float> values) {
            addCriterion("y_begin in", values, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginNotIn(List<Float> values) {
            addCriterion("y_begin not in", values, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginBetween(Float value1, Float value2) {
            addCriterion("y_begin between", value1, value2, "yBegin");
            return (Criteria) this;
        }

        public Criteria andYBeginNotBetween(Float value1, Float value2) {
            addCriterion("y_begin not between", value1, value2, "yBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginIsNull() {
            addCriterion("x_begin is null");
            return (Criteria) this;
        }

        public Criteria andXBeginIsNotNull() {
            addCriterion("x_begin is not null");
            return (Criteria) this;
        }

        public Criteria andXBeginEqualTo(Float value) {
            addCriterion("x_begin =", value, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginNotEqualTo(Float value) {
            addCriterion("x_begin <>", value, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginGreaterThan(Float value) {
            addCriterion("x_begin >", value, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginGreaterThanOrEqualTo(Float value) {
            addCriterion("x_begin >=", value, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginLessThan(Float value) {
            addCriterion("x_begin <", value, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginLessThanOrEqualTo(Float value) {
            addCriterion("x_begin <=", value, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginIn(List<Float> values) {
            addCriterion("x_begin in", values, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginNotIn(List<Float> values) {
            addCriterion("x_begin not in", values, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginBetween(Float value1, Float value2) {
            addCriterion("x_begin between", value1, value2, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXBeginNotBetween(Float value1, Float value2) {
            addCriterion("x_begin not between", value1, value2, "xBegin");
            return (Criteria) this;
        }

        public Criteria andXEndIsNull() {
            addCriterion("x_end is null");
            return (Criteria) this;
        }

        public Criteria andXEndIsNotNull() {
            addCriterion("x_end is not null");
            return (Criteria) this;
        }

        public Criteria andXEndEqualTo(Float value) {
            addCriterion("x_end =", value, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndNotEqualTo(Float value) {
            addCriterion("x_end <>", value, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndGreaterThan(Float value) {
            addCriterion("x_end >", value, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndGreaterThanOrEqualTo(Float value) {
            addCriterion("x_end >=", value, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndLessThan(Float value) {
            addCriterion("x_end <", value, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndLessThanOrEqualTo(Float value) {
            addCriterion("x_end <=", value, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndIn(List<Float> values) {
            addCriterion("x_end in", values, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndNotIn(List<Float> values) {
            addCriterion("x_end not in", values, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndBetween(Float value1, Float value2) {
            addCriterion("x_end between", value1, value2, "xEnd");
            return (Criteria) this;
        }

        public Criteria andXEndNotBetween(Float value1, Float value2) {
            addCriterion("x_end not between", value1, value2, "xEnd");
            return (Criteria) this;
        }

        public Criteria andTextIsNull() {
            addCriterion("text is null");
            return (Criteria) this;
        }

        public Criteria andTextIsNotNull() {
            addCriterion("text is not null");
            return (Criteria) this;
        }

        public Criteria andTextEqualTo(String value) {
            addCriterion("text =", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextNotEqualTo(String value) {
            addCriterion("text <>", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextGreaterThan(String value) {
            addCriterion("text >", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextGreaterThanOrEqualTo(String value) {
            addCriterion("text >=", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextLessThan(String value) {
            addCriterion("text <", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextLessThanOrEqualTo(String value) {
            addCriterion("text <=", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextLike(String value) {
            addCriterion("text like", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextNotLike(String value) {
            addCriterion("text not like", value, "text");
            return (Criteria) this;
        }

        public Criteria andTextIn(List<String> values) {
            addCriterion("text in", values, "text");
            return (Criteria) this;
        }

        public Criteria andTextNotIn(List<String> values) {
            addCriterion("text not in", values, "text");
            return (Criteria) this;
        }

        public Criteria andTextBetween(String value1, String value2) {
            addCriterion("text between", value1, value2, "text");
            return (Criteria) this;
        }

        public Criteria andTextNotBetween(String value1, String value2) {
            addCriterion("text not between", value1, value2, "text");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pdf_linedata
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pdf_linedata
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}